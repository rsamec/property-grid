{
  "name": "sass-loader",
  "version": "0.2.0",
  "description": "SASS loader for Webpack",
  "main": "index.js",
  "scripts": {
    "test": "./node_modules/webpack/bin/webpack.js -w --config=test/webpack.config.js"
  },
  "keywords": [
    "sass",
    "webpack",
    "loader"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/jtangelder/sass-loader.git"
  },
  "author": {
    "name": "J. Tangelder"
  },
  "license": "MIT",
  "dependencies": {
    "loader-utils": "~0.2.2",
    "node-sass": "^0.9.0"
  },
  "devDependencies": {
    "css-loader": "^0.6.12",
    "webpack": "^1.2.0"
  },
  "readme": "# sass loader for [webpack](http://webpack.github.io/)\n\n\n## Usage\n\n[Documentation: Using loaders](http://webpack.github.io/docs/using-loaders.html)\n\n``` javascript\nvar css = require(\"!raw!sass!./file.scss\");\n// => returns compiled css code from file.scss, resolves imports\nvar css = require(\"!css!sass!./file.scss\");\n// => returns compiled css code from file.scss, resolves imports and url(...)s\n```\n\nUse in tandem with the [`style-loader`](https://github.com/webpack/style-loader) to add the css rules to your document:\n\n``` javascript\nrequire(\"!style!css!sass!./file.scss\");\n```\n\n### webpack config\n\nIt's recommended to adjust your `webpack.config` so `style!css!sass!` is applied automatically on all files ending on `.scss`:\n\n``` javascript\nmodule.exports = {\n  module: {\n    loaders: [\n      {\n        test: /\\.scss$/,\n        loader: \"style!css!sass?outputStyle=expanded\"\n      }\n    ]\n  }\n};\n```\n\nThen you only need to write: `require(\"./file.scss\")`. See [`node-sass`](https://github.com/andrew/node-sass) for the available options.\n\n## Install\n\n`npm install sass-loader`\n\n## Caveats\n\nThe sass-loader does not currently follow all of the webpack loader guidelines.  Specifically, until the [mark and resolve dependencies](https://github.com/jtangelder/sass-loader/issues/2) feature is added, webpack will not resolve your `@import` statements for you or watch and reload when a SASS dependency changes.  You can use a third party watch module to handle at least the reloading aspect for the time being.\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jtangelder/sass-loader/issues"
  },
  "_id": "sass-loader@0.2.0",
  "dist": {
    "shasum": "042dc7904d182746ec36632d8f3300acc9d81074"
  },
  "_from": "sass-loader@",
  "_resolved": "https://registry.npmjs.org/sass-loader/-/sass-loader-0.2.0.tgz"
}
