{
  "name": "stylus-loader",
  "version": "0.4.0",
  "description": "Stylus loader for webpack",
  "main": "index.js",
  "scripts": {
    "test": "webpack-dev-server --config test/webpack.config.js"
  },
  "author": {
    "name": "Kyle Robinson Young",
    "email": "kyle@dontkry.com",
    "url": "http://dontkry.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git@github.com:shama/stylus-loader.git"
  },
  "bugs": {
    "url": "https://github.com/shama/stylus-loader/issues"
  },
  "dependencies": {
    "loader-utils": "~0.2.3",
    "nib": "~1.0.2",
    "stylus": "~0.47.2",
    "when": "~3.2.x"
  },
  "devDependencies": {
    "css-loader": "~0.6.2",
    "mocha": "~1.14.0",
    "mocha-loader": "~0.6.5",
    "raw-loader": "~0.5.0",
    "should": "~2.0.2",
    "webpack-dev-server": "~1.4.7"
  },
  "keywords": [
    "webpack",
    "loader",
    "stylus"
  ],
  "readme": "# stylus-loader\nA [stylus](http://learnboost.github.io/stylus/) loader for [webpack](https://github.com/webpack/webpack).\n\n## Usage\n\n```js\nvar css = require('!raw!stylus!./file.styl'); // Just the CSS\nvar css = require('!css!stylus!./file.styl'); // CSS with processed url(...)s\n```\n\nSee [css-loader](https://github.com/webpack/css-loader) to see the effect of processed `url(...)`s.\n\nOr within the webpack config:\n\n```js\nmodule: {\n  loaders: [{\n    test: /\\.styl$/,\n    loader: 'css-loader!stylus-loader?paths=node_modules/bootstrap-stylus/stylus/'\n  }]\n}\n```\n\nThen you can: `var css = require('./file.styl');`.\n\nUse in tandem with the [style-loader](https://github.com/webpack/style-loader) to add the css rules to your `document`:\n\n```js\nmodule: {\n  loaders: [\n    { test: /\\.styl$/, loader: 'style-loader!css-loader!stylus-loader' }\n  ]\n}\n```\n\nand then `require('./file.styl');` will compile and add the CSS to your page.\n\n`stylus-loader` can also take advantage of webpack's resolve options. With the default options it'll find files in `web_modules` as well as `node_modules`, make sure to prefix any lookup in node_modules with `~`. For example if you have a styles package lookup files in it like `@import '~styles/my-styles`. It can also find stylus files without having the extension specified in the `@import` and index files in folders if webpack is configured for stylus's file extension.\n\n```js\nmodule: {\n  resolve: {\n    extensions: ['', '.js', '.styl']\n  }\n}\n```\n\nwill let you have an `index.styl` file in your styles package and `require('styles')` or `@import '~styles'` it. It also lets you load a stylus file from a package installed in node_modules or if you add a modulesDirectories, like `modulesDirectories: ['node_modules', 'web_modules', 'bower_components']` option you could load from a folder like bower_components. To load files from a relative path leave off the `~` and `@import 'relative-styles/my-styles';` it.\n\nBe careful though not to use the extensions configuration for two types of in one folder. If a folder has a `index.js` and a `index.styl` and you `@import './that-folder'`, it'll end up importing a javascript file into your stylus.\n\n### Stylus Plugins\n\nYou can also use stylus plugins by adding an extra `stylus` section to your `webpack.config.js`.\n\n```js\nvar stylus_plugin = require('stylus_plugin');\nmodule: {\n  loaders: [\n    { test: /\\.styl$/, loader: 'style-loader!css-loader!stylus-loader' }\n  ]\n},\nstylus: {\n  use: [stylus_plugin()]\n}\n```\n\n## Install\n\n`npm install stylus-loader --save-dev`\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style.\n\n## Release History\n* 0.4.0 - Allow configuration of plugins through webpack config (@bobzoller). Update to stylus 0.47.2 (@shanewilson).\n* 0.3.1 - Fix when dependency (@tkellen)\n* 0.3.0 - Define url resolver() when \"resolve url\" option is true (@mzgoddard).\n* 0.2.0 - Now tracks dependencies for @import statements making cacheable work. Update stylus dep.\n* 0.1.0 - Initial release\n\n## License\nCopyright (c) 2014 Kyle Robinson Young  \nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "stylus-loader@0.4.0",
  "_from": "stylus-loader@"
}
